https://practice.geeksforgeeks.org/problems/k-largest-elements3736/1

#include <iostream>
#include <vector>
#include <queue>

using namespace std;

priority_queue<int, vector<int>, greater<int>> findKLargest(int arr[], int num, int k)
{
    // Create a min heap
    priority_queue<int, vector<int>, greater<int>> minHeap;

    // Insert the first k elements into the min heap
    for (int i = 0; i < num; i++)
    {
        minHeap.push(arr[i]);

        if (minHeap.size() >k)
            minHeap.pop();
    }

    return minHeap;
}

int main()
{
    int num = 7;
    int k = 3;
    int arr[] = {6, 5, 3, 2, 8, 10, 9};
    priority_queue<int, vector<int>, greater<int>> kLargest = findKLargest(arr, num, k);

    while (!kLargest.empty())
    {
        cout << kLargest.top() << " ";
        kLargest.pop();
    }

    return 0;
}
OUTPUT
8 9 10
