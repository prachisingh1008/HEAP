class MyComp
{
    public:
        bool operator()(pair<int,int> a,pair<int,int> b)
        {
            if(a.first==b.first)
            {
                return a.second < b.second;
            }
            return a.first > b.first;

        }
};
class Solution {
public:
    vector<int> frequencySort(vector<int>& nums) {
        unordered_map<int , int>m;
 priority_queue<pair<int,int>,vector<pair<int,int>>,MyComp>p;
        vector<int>ps;
        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]]++;
        }
        for(auto i=m.begin();i!=m.end();i++)
        {
p.push({i->second,i->first});

        }
        while(p.size()>0)
        {
            int f=p.top().first;
            int e=p.top().second;
            for(int i=0;i<f;i++)
            {
                ps.push_back(e);
            }
            p.pop();

        }

      return ps;  
    }
};

Input: nums = [1,1,2,2,2,3]
Output: [3,1,1,2,2,2]
Explanation: '3' has a frequency of 1, '1' has a frequency of 2, and '2' has a frequency of 3.
Example 2:

Input: nums = [2,3,1,3,2]
Output: [1,3,3,2,2]
Explanation: '2' and '3' both have a frequency of 2, so they are sorted in decreasing order.
